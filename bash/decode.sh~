#!/bin/bash


#SBATCH -o log/decode.%j.log
#SBATCH -e elog/decode.%j.log
#SBATCH -p cpuq/sjtu
#SBATCH --mem=10G
#SBATCH --ntasks-per-node=$threads
#SBATCH --nodes=$nodes

threads=8
nodes=1


data_dir=data-fbank-64d-25ms-cms-dump-fixpath
test_data=test_eval92
test_ali=tri5c_clean
modelpath=/mnt/lustre/sjtu/users/jqg01/asr/aurora4/exp_new/si84-dnn-baseline/model_best.param
# modelpath=/mnt/lustre/sjtu/users/jqg01/asr/aurora4/exp_new/model_best.param
graph=graph_bg4_5k
latout=dnn_lattice2


DELTAS="add-deltas ark:- ark:-"
FEXT="splice-feats --left-context=11 --right-context=11  ark:- ark:-"

OUTPUTDIM=`am-info exp/$test_ali/final.mdl | grep 'pdfs' | awk '{print $4}'`

LOGPRIOR='prior.dat'

pystring=/mnt/lustre/sjtu/users/jqg01/anaconda3/bin/python 


words=exp/$test_ali/$graph/words.txt
model=exp/$test_ali/final.mdl
graph=exp/"$test_ali"/"$graph"/HCLG.fst


mkdir -p $latout

num_threads=`expr $nodes \* $threads`

nj=8

for SGE_TASK_ID in 1 2 3 4 5 6 7 8; do
TESTDATA="copy-feats scp:$data_dir/$test_data/split${nj}/${SGE_TASK_ID}/feats.scp ark:- | $FEXT |$DELTAS |"
(
echo "python -m py_src.dnnbaseline.forward --modelpath $modelpath --outputdim $OUTPUTDIM  $TESTDATA"
echo 'latgen-faster-mapped-parallel --num-threads=$num_threds --min-active=200 --max-active=7000 --max-mem=50000000 --beam=13.0 --lattice-beam=8.0 --acoustic-scale=0.0833 --allow-partial=true --word-symbol-table=$words $model $graph ark:- "ark:|gzip -c > $latout/lat.$SGE_TASK_ID.gz"'
python -m py_src.dnnbaseline.forward --modelpath $modelpath --nocuda --logprior $LOGPRIOR --outputdim "$OUTPUTDIM"  "$TESTDATA"  | latgen-faster-mapped-parallel --num-threads=1 --min-active=200 --max-active=7000 --max-mem=50000000 --beam=13.0 --lattice-beam=8.0 --acoustic-scale=0.0833 --allow-partial=true --word-symbol-table=$words $model $graph ark:- "ark:|gzip -c > $latout/lat.$SGE_TASK_ID.gz" || exit 1;
) & 
done

wait
